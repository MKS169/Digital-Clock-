library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity LongPress is
port(CLOCK_50  : in std_logic;
	  en   		: in std_logic;
	  outP 		: out std_logic);
end LongPress;

architecture Behavioral of LongPress is

	signal s_count : integer := 0;
	signal s_clk : std_logic;
	
begin

freqDiv: entity work.freqDivider(Behavioral)
				generic map(DIV_FACTOR => 50E6); --freq 1hz = 1sec
				port map(clkIn  => CLOCK_50,
							clkOut => s_clk);
							
	process(en)
	begin
		if(en = '1') then
			if(rising_edge(s_clk)) then
				s_count <= s_count + 1;
			end if;
		else
			s_count <= 0;
		end if;
	end process;
		process(s_count)
	begin
		if(s_count >= 3) then
			outP <= '1';
		else
			outP <= '0';
		end if;
	end process;
end Behavioral;